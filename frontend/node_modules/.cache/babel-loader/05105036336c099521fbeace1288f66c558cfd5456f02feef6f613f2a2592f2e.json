{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kolli sushma\\\\Downloads\\\\S62\\\\frontend\\\\src\\\\components\\\\Summary.js\",\n  _s = $RefreshSig$();\n// src/pages/Summary.js\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport * as d3 from 'd3';\nimport '../styles/Summary.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Summary = () => {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/monthly-solar-generation');\n        setData(response.data);\n        drawChart(response.data);\n      } catch (error) {\n        console.error('Error fetching the data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  const drawChart = data => {\n    // Clear any previous chart\n    d3.select('#barChart').selectAll('*').remove();\n    const width = 700;\n    const height = 400;\n    const margin = {\n      top: 20,\n      right: 20,\n      bottom: 60,\n      left: 60\n    };\n    const svg = d3.select('#barChart').append('svg').attr('width', width).attr('height', height);\n    const xScale = d3.scaleBand().domain(data.map(d => d.Month)).range([margin.left, width - margin.right]).padding(0.1);\n    const yScale = d3.scaleLinear().domain([0, 30000]).range([height - margin.bottom, margin.top]);\n    svg.append('g').attr('transform', `translate(0,${height - margin.bottom})`).call(d3.axisBottom(xScale)).selectAll('text').attr('transform', 'rotate(-45)').style('text-anchor', 'end');\n    svg.append('g').attr('transform', `translate(${margin.left},0)`).call(d3.axisLeft(yScale).ticks(6).tickFormat(d => `${d} GWh`));\n    svg.selectAll('.bar').data(data).enter().append('rect').attr('class', 'bar').attr('x', d => xScale(d.Month)).attr('y', d => yScale(d.generation)).attr('width', xScale.bandwidth()).attr('height', d => height - margin.bottom - yScale(d.generation)).attr('fill', '#4e79a7');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"summary-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Monthly Solar Energy Generation in the U.S. (2023)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"barChart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"This chart illustrates the monthly solar energy generation in gigawatt-hours (GWh) across the United States in 2023. The data provides insights into seasonal trends in solar energy production. Source: \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://www.climatecentral.org/report/solar-and-wind-power-2024\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Climate Central\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(Summary, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = Summary;\nexport default Summary;\nvar _c;\n$RefreshReg$(_c, \"Summary\");","map":{"version":3,"names":["React","useEffect","useState","axios","d3","jsxDEV","_jsxDEV","Summary","_s","data","setData","fetchData","response","get","drawChart","error","console","select","selectAll","remove","width","height","margin","top","right","bottom","left","svg","append","attr","xScale","scaleBand","domain","map","d","Month","range","padding","yScale","scaleLinear","call","axisBottom","style","axisLeft","ticks","tickFormat","enter","generation","bandwidth","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","href","target","rel","_c","$RefreshReg$"],"sources":["C:/Users/kolli sushma/Downloads/S62/frontend/src/components/Summary.js"],"sourcesContent":["// src/pages/Summary.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport * as d3 from 'd3';\r\nimport '../styles/Summary.css';\r\n\r\nconst Summary = () => {\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/monthly-solar-generation');\r\n        setData(response.data);\r\n        drawChart(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching the data:', error);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const drawChart = (data) => {\r\n    // Clear any previous chart\r\n    d3.select('#barChart').selectAll('*').remove();\r\n\r\n    const width = 700;\r\n    const height = 400;\r\n    const margin = { top: 20, right: 20, bottom: 60, left: 60 };\r\n\r\n    const svg = d3.select('#barChart')\r\n      .append('svg')\r\n      .attr('width', width)\r\n      .attr('height', height);\r\n\r\n    const xScale = d3.scaleBand()\r\n      .domain(data.map(d => d.Month))\r\n      .range([margin.left, width - margin.right])\r\n      .padding(0.1);\r\n\r\n    const yScale = d3.scaleLinear()\r\n      .domain([0, 30000])\r\n      .range([height - margin.bottom, margin.top]);\r\n\r\n    svg.append('g')\r\n      .attr('transform', `translate(0,${height - margin.bottom})`)\r\n      .call(d3.axisBottom(xScale))\r\n      .selectAll('text')\r\n      .attr('transform', 'rotate(-45)')\r\n      .style('text-anchor', 'end');\r\n\r\n    svg.append('g')\r\n      .attr('transform', `translate(${margin.left},0)`)\r\n      .call(d3.axisLeft(yScale).ticks(6).tickFormat(d => `${d} GWh`));\r\n\r\n    svg.selectAll('.bar')\r\n      .data(data)\r\n      .enter()\r\n      .append('rect')\r\n      .attr('class', 'bar')\r\n      .attr('x', d => xScale(d.Month))\r\n      .attr('y', d => yScale(d.generation))\r\n      .attr('width', xScale.bandwidth())\r\n      .attr('height', d => height - margin.bottom - yScale(d.generation))\r\n      .attr('fill', '#4e79a7');\r\n  };\r\n\r\n  return (\r\n    <div className=\"summary-container\">\r\n      <h1>Monthly Solar Energy Generation in the U.S. (2023)</h1>\r\n      <div id=\"barChart\"></div>\r\n      <p>This chart illustrates the monthly solar energy generation in gigawatt-hours (GWh) across the United States in 2023. The data provides insights into seasonal trends in solar energy production. \r\n      Source: <a href=\"https://www.climatecentral.org/report/solar-and-wind-power-2024\" target=\"_blank\" rel=\"noopener noreferrer\">Climate Central</a></p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Summary;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}