{"ast":null,"code":"// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import * as d3 from 'd3';\n// import '../styles/Reports.css';\n\n// const Reports = () => {\n\n//   // eslint-disable-next-line no-unused-vars\n// const [data, setData] = useState([]);\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       const token = localStorage.getItem('token'); // Retrieve the token\n//       try {\n//         const response = await axios.get('http://localhost:5000/api/solar-generation', {\n//           headers: {\n//             Authorization: `Bearer ${token}`, // Include the token in headers\n//           },\n//         });\n//         setData(response.data);\n//         drawChart(response.data);\n//       } catch (error) {\n//         console.error(\"Error fetching the data:\", error);\n//       }\n//     };\n//     fetchData();\n//   }, []);\n\n//   const drawChart = (data) => {\n//     // Clear any previous chart\n//     d3.select('#chart').selectAll('*').remove();\n\n//     const width = 600;\n//     const height = 400;\n//     const radius = Math.min(width, height) / 2;\n\n//     const color = d3.scaleOrdinal(d3.schemeCategory10);\n\n//     // Create SVG\n//     const svg = d3.select('#chart')\n//       .append('svg')\n//       .attr('width', width)\n//       .attr('height', height)\n//       .append('g')\n//       .attr('transform', `translate(${width / 2}, ${height / 2})`);\n\n//     const pie = d3.pie().value(d => d.generation);\n//     const arc = d3.arc().innerRadius(0).outerRadius(radius);\n//     const outerArc = d3.arc().innerRadius(radius * 1.2).outerRadius(radius * 1.2);\n\n//     // Create arcs\n//     const arcs = svg.selectAll('.arc')\n//       .data(pie(data))\n//       .enter().append('g')\n//       .attr('class', 'arc');\n\n//     // Draw pie slices\n//     arcs.append('path')\n//       .attr('d', arc)\n//       .attr('fill', d => color(d.data.state));\n\n//     // Draw labels with lines pointing to slices\n//     arcs.append('polyline')\n//       .attr('points', d => {\n//         const posA = arc.centroid(d); // Slice center\n//         const posB = outerArc.centroid(d); // Label position\n//         const posC = [outerArc.centroid(d)[0] + (d.endAngle > Math.PI ? -10 : 10), outerArc.centroid(d)[1]]; // Extended line\n//         return [posA, posB, posC];\n//       })\n//       .style('fill', 'none')\n//       .style('stroke', 'black')\n//       .style('stroke-width', '1px')\n//       .style('opacity', 0.7);\n\n//     arcs.append('text')\n//       .attr('transform', d => `translate(${outerArc.centroid(d)})`)\n//       .attr('dy', '.35em')\n//       .style('text-anchor', d => d.endAngle > Math.PI ? 'end' : 'start')\n//       .text(d => d.data.state)\n//       .style('font-size', '0.8rem')\n//       .style('font-weight', 'bold')\n//       .style('fill', '#333');\n\n//     // Draw legend\n//     const legend = svg.append('g')\n//       .attr('class', 'legend') // Add class for legend styling\n//       .attr('transform', `translate(${width / 2 - 100}, ${height / 2 + radius + 20})`);\n\n//     data.forEach((d, i) => {\n//       const legendRow = legend.append('g')\n//         .attr('class', 'legend-row') // Add class for each legend row\n//         .attr('transform', `translate(0, ${i * 20})`);\n\n//       legendRow.append('rect')\n//         .attr('width', 15)\n//         .attr('height', 15)\n//         .attr('fill', color(d.state));\n\n//       legendRow.append('text')\n//         .attr('x', 20)\n//         .attr('y', 12)\n//         .text(d.state)\n//         .style('font-size', '0.9rem')\n//         .style('color', '#333');\n//     });\n//   };\n\n//   return (\n//     <div>\n//       <h1>Solar Energy Generation in 2023 by State (GWh)</h1>\n//       <div id=\"chart\"></div>\n//       <p>This chart displays the solar energy generation in gigawatt-hours (GWh) for various states in the USA during 2023. The data reflects the total solar energy generated in each state, providing insights into the distribution of solar energy resources across the country.</p>\n//       <p>Source: U.S. Energy Information Administration (EIA), Solar Generation Data 2023.</p>\n//     </div>\n//   );\n// };\n\n// export default Reports;\nconst drawChart = data => {\n  // Clear any previous chart\n  d3.select('#chart').selectAll('*').remove();\n  const width = 600;\n  const height = 400;\n  const radius = Math.min(width, height) / 2;\n  const color = d3.scaleOrdinal(d3.schemeCategory10);\n\n  // Create SVG\n  const svg = d3.select('#chart').append('svg').attr('width', width).attr('height', height).append('g').attr('transform', `translate(${width / 2}, ${height / 2})`);\n\n  // Tooltip\n  const tooltip = d3.select('#chart').append('div').attr('class', 'tooltip').style('opacity', 0).style('position', 'absolute').style('background', '#333').style('color', '#fff').style('padding', '5px').style('border-radius', '5px').style('font-size', '0.8rem');\n  const pie = d3.pie().value(d => d.generation);\n  const arc = d3.arc().innerRadius(0).outerRadius(radius);\n  const outerArc = d3.arc().innerRadius(radius * 1.2).outerRadius(radius * 1.2);\n\n  // Create arcs\n  const arcs = svg.selectAll('.arc').data(pie(data)).enter().append('g').attr('class', 'arc');\n\n  // Draw pie slices\n  arcs.append('path').attr('d', arc).attr('fill', d => color(d.data.state)).on('mouseover', function (event, d) {\n    tooltip.transition().duration(200).style('opacity', 0.9);\n    tooltip.html(`${d.data.state}: ${d.data.generation} GWh`).style('left', event.pageX + 10 + 'px').style('top', event.pageY - 25 + 'px');\n  }).on('mousemove', function (event) {\n    tooltip.style('left', event.pageX + 10 + 'px').style('top', event.pageY - 25 + 'px');\n  }).on('mouseout', function () {\n    tooltip.transition().duration(500).style('opacity', 0);\n  });\n\n  // Draw labels with lines pointing to slices\n  arcs.append('polyline').attr('points', d => {\n    const posA = arc.centroid(d); // Slice center\n    const posB = outerArc.centroid(d); // Label position\n    const posC = [outerArc.centroid(d)[0] + (d.endAngle > Math.PI ? -10 : 10), outerArc.centroid(d)[1]]; // Extended line\n    return [posA, posB, posC];\n  }).style('fill', 'none').style('stroke', 'black').style('stroke-width', '1px').style('opacity', 0.7);\n  arcs.append('text').attr('transform', d => `translate(${outerArc.centroid(d)})`).attr('dy', '.35em').style('text-anchor', d => d.endAngle > Math.PI ? 'end' : 'start').text(d => d.data.state).style('font-size', '0.8rem').style('font-weight', 'bold').style('fill', '#333');\n\n  // Draw legend\n  const legend = svg.append('g').attr('class', 'legend').attr('transform', `translate(${width / 2 - 100}, ${height / 2 + radius + 20})`);\n  data.forEach((d, i) => {\n    const legendRow = legend.append('g').attr('class', 'legend-row').attr('transform', `translate(0, ${i * 20})`);\n    legendRow.append('rect').attr('width', 15).attr('height', 15).attr('fill', color(d.state));\n    legendRow.append('text').attr('x', 20).attr('y', 12).text(d.state).style('font-size', '0.9rem').style('color', '#333');\n  });\n};","map":{"version":3,"names":["drawChart","data","d3","select","selectAll","remove","width","height","radius","Math","min","color","scaleOrdinal","schemeCategory10","svg","append","attr","tooltip","style","pie","value","d","generation","arc","innerRadius","outerRadius","outerArc","arcs","enter","state","on","event","transition","duration","html","pageX","pageY","posA","centroid","posB","posC","endAngle","PI","text","legend","forEach","i","legendRow"],"sources":["C:/Users/kolli sushma/Downloads/S62/frontend/src/components/Reports.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import axios from 'axios';\r\n// import * as d3 from 'd3';\r\n// import '../styles/Reports.css';\r\n\r\n// const Reports = () => {\r\n\r\n//   // eslint-disable-next-line no-unused-vars\r\n// const [data, setData] = useState([]);\r\n\r\n\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       const token = localStorage.getItem('token'); // Retrieve the token\r\n//       try {\r\n//         const response = await axios.get('http://localhost:5000/api/solar-generation', {\r\n//           headers: {\r\n//             Authorization: `Bearer ${token}`, // Include the token in headers\r\n//           },\r\n//         });\r\n//         setData(response.data);\r\n//         drawChart(response.data);\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching the data:\", error);\r\n//       }\r\n//     };\r\n//     fetchData();\r\n//   }, []);\r\n\r\n//   const drawChart = (data) => {\r\n//     // Clear any previous chart\r\n//     d3.select('#chart').selectAll('*').remove();\r\n  \r\n//     const width = 600;\r\n//     const height = 400;\r\n//     const radius = Math.min(width, height) / 2;\r\n  \r\n//     const color = d3.scaleOrdinal(d3.schemeCategory10);\r\n  \r\n//     // Create SVG\r\n//     const svg = d3.select('#chart')\r\n//       .append('svg')\r\n//       .attr('width', width)\r\n//       .attr('height', height)\r\n//       .append('g')\r\n//       .attr('transform', `translate(${width / 2}, ${height / 2})`);\r\n  \r\n//     const pie = d3.pie().value(d => d.generation);\r\n//     const arc = d3.arc().innerRadius(0).outerRadius(radius);\r\n//     const outerArc = d3.arc().innerRadius(radius * 1.2).outerRadius(radius * 1.2);\r\n  \r\n//     // Create arcs\r\n//     const arcs = svg.selectAll('.arc')\r\n//       .data(pie(data))\r\n//       .enter().append('g')\r\n//       .attr('class', 'arc');\r\n  \r\n//     // Draw pie slices\r\n//     arcs.append('path')\r\n//       .attr('d', arc)\r\n//       .attr('fill', d => color(d.data.state));\r\n  \r\n//     // Draw labels with lines pointing to slices\r\n//     arcs.append('polyline')\r\n//       .attr('points', d => {\r\n//         const posA = arc.centroid(d); // Slice center\r\n//         const posB = outerArc.centroid(d); // Label position\r\n//         const posC = [outerArc.centroid(d)[0] + (d.endAngle > Math.PI ? -10 : 10), outerArc.centroid(d)[1]]; // Extended line\r\n//         return [posA, posB, posC];\r\n//       })\r\n//       .style('fill', 'none')\r\n//       .style('stroke', 'black')\r\n//       .style('stroke-width', '1px')\r\n//       .style('opacity', 0.7);\r\n\r\n//     arcs.append('text')\r\n//       .attr('transform', d => `translate(${outerArc.centroid(d)})`)\r\n//       .attr('dy', '.35em')\r\n//       .style('text-anchor', d => d.endAngle > Math.PI ? 'end' : 'start')\r\n//       .text(d => d.data.state)\r\n//       .style('font-size', '0.8rem')\r\n//       .style('font-weight', 'bold')\r\n//       .style('fill', '#333');\r\n  \r\n//     // Draw legend\r\n//     const legend = svg.append('g')\r\n//       .attr('class', 'legend') // Add class for legend styling\r\n//       .attr('transform', `translate(${width / 2 - 100}, ${height / 2 + radius + 20})`);\r\n\r\n//     data.forEach((d, i) => {\r\n//       const legendRow = legend.append('g')\r\n//         .attr('class', 'legend-row') // Add class for each legend row\r\n//         .attr('transform', `translate(0, ${i * 20})`);\r\n\r\n//       legendRow.append('rect')\r\n//         .attr('width', 15)\r\n//         .attr('height', 15)\r\n//         .attr('fill', color(d.state));\r\n\r\n//       legendRow.append('text')\r\n//         .attr('x', 20)\r\n//         .attr('y', 12)\r\n//         .text(d.state)\r\n//         .style('font-size', '0.9rem')\r\n//         .style('color', '#333');\r\n//     });\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>Solar Energy Generation in 2023 by State (GWh)</h1>\r\n//       <div id=\"chart\"></div>\r\n//       <p>This chart displays the solar energy generation in gigawatt-hours (GWh) for various states in the USA during 2023. The data reflects the total solar energy generated in each state, providing insights into the distribution of solar energy resources across the country.</p>\r\n//       <p>Source: U.S. Energy Information Administration (EIA), Solar Generation Data 2023.</p>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Reports;\r\nconst drawChart = (data) => {\r\n    // Clear any previous chart\r\n    d3.select('#chart').selectAll('*').remove();\r\n  \r\n    const width = 600;\r\n    const height = 400;\r\n    const radius = Math.min(width, height) / 2;\r\n  \r\n    const color = d3.scaleOrdinal(d3.schemeCategory10);\r\n  \r\n    // Create SVG\r\n    const svg = d3.select('#chart')\r\n      .append('svg')\r\n      .attr('width', width)\r\n      .attr('height', height)\r\n      .append('g')\r\n      .attr('transform', `translate(${width / 2}, ${height / 2})`);\r\n  \r\n    // Tooltip\r\n    const tooltip = d3.select('#chart')\r\n      .append('div')\r\n      .attr('class', 'tooltip')\r\n      .style('opacity', 0)\r\n      .style('position', 'absolute')\r\n      .style('background', '#333')\r\n      .style('color', '#fff')\r\n      .style('padding', '5px')\r\n      .style('border-radius', '5px')\r\n      .style('font-size', '0.8rem');\r\n  \r\n    const pie = d3.pie().value(d => d.generation);\r\n    const arc = d3.arc().innerRadius(0).outerRadius(radius);\r\n    const outerArc = d3.arc().innerRadius(radius * 1.2).outerRadius(radius * 1.2);\r\n  \r\n    // Create arcs\r\n    const arcs = svg.selectAll('.arc')\r\n      .data(pie(data))\r\n      .enter().append('g')\r\n      .attr('class', 'arc');\r\n  \r\n    // Draw pie slices\r\n    arcs.append('path')\r\n      .attr('d', arc)\r\n      .attr('fill', d => color(d.data.state))\r\n      .on('mouseover', function (event, d) {\r\n        tooltip.transition().duration(200).style('opacity', 0.9);\r\n        tooltip.html(`${d.data.state}: ${d.data.generation} GWh`)\r\n          .style('left', (event.pageX + 10) + 'px')\r\n          .style('top', (event.pageY - 25) + 'px');\r\n      })\r\n      .on('mousemove', function (event) {\r\n        tooltip.style('left', (event.pageX + 10) + 'px')\r\n          .style('top', (event.pageY - 25) + 'px');\r\n      })\r\n      .on('mouseout', function () {\r\n        tooltip.transition().duration(500).style('opacity', 0);\r\n      });\r\n  \r\n    // Draw labels with lines pointing to slices\r\n    arcs.append('polyline')\r\n      .attr('points', d => {\r\n        const posA = arc.centroid(d); // Slice center\r\n        const posB = outerArc.centroid(d); // Label position\r\n        const posC = [outerArc.centroid(d)[0] + (d.endAngle > Math.PI ? -10 : 10), outerArc.centroid(d)[1]]; // Extended line\r\n        return [posA, posB, posC];\r\n      })\r\n      .style('fill', 'none')\r\n      .style('stroke', 'black')\r\n      .style('stroke-width', '1px')\r\n      .style('opacity', 0.7);\r\n  \r\n    arcs.append('text')\r\n      .attr('transform', d => `translate(${outerArc.centroid(d)})`)\r\n      .attr('dy', '.35em')\r\n      .style('text-anchor', d => d.endAngle > Math.PI ? 'end' : 'start')\r\n      .text(d => d.data.state)\r\n      .style('font-size', '0.8rem')\r\n      .style('font-weight', 'bold')\r\n      .style('fill', '#333');\r\n  \r\n    // Draw legend\r\n    const legend = svg.append('g')\r\n      .attr('class', 'legend')\r\n      .attr('transform', `translate(${width / 2 - 100}, ${height / 2 + radius + 20})`);\r\n  \r\n    data.forEach((d, i) => {\r\n      const legendRow = legend.append('g')\r\n        .attr('class', 'legend-row')\r\n        .attr('transform', `translate(0, ${i * 20})`);\r\n  \r\n      legendRow.append('rect')\r\n        .attr('width', 15)\r\n        .attr('height', 15)\r\n        .attr('fill', color(d.state));\r\n  \r\n      legendRow.append('text')\r\n        .attr('x', 20)\r\n        .attr('y', 12)\r\n        .text(d.state)\r\n        .style('font-size', '0.9rem')\r\n        .style('color', '#333');\r\n    });\r\n  };\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}