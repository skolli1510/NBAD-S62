{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kolli sushma\\\\Downloads\\\\S62\\\\frontend\\\\src\\\\components\\\\Reports.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport * as d3 from 'd3';\nimport '../styles/Reports.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Reports = () => {\n  _s();\n  // eslint-disable-next-line no-unused-vars\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const token = localStorage.getItem('token'); // Retrieve the token\n      try {\n        const response = await axios.get('http://localhost:5000/api/solar-generation', {\n          headers: {\n            Authorization: `Bearer ${token}` // Include the token in headers\n          }\n        });\n        setData(response.data);\n        drawChart(response.data);\n      } catch (error) {\n        console.error(\"Error fetching the data:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // const drawChart = (data) => {\n  //     // Clear any previous chart\n  //     d3.select('#chart').selectAll('*').remove();\n\n  //     const width = 600;\n  //     const height = 400;\n  //     const radius = Math.min(width, height) / 2;\n\n  //     const color = d3.scaleOrdinal(d3.schemeCategory10);\n\n  //     // Create SVG\n  //     const svg = d3.select('#chart')\n  //       .append('svg')\n  //       .attr('width', width)\n  //       .attr('height', height)\n  //       .append('g')\n  //       .attr('transform', `translate(${width / 2}, ${height / 2})`);\n\n  //     // Tooltip\n  //     const tooltip = d3.select('#chart')\n  //       .append('div')\n  //       .attr('class', 'tooltip')\n  //       .style('opacity', 0)\n  //       .style('position', 'absolute')\n  //       .style('background', '#333')\n  //       .style('color', '#fff')\n  //       .style('padding', '5px')\n  //       .style('border-radius', '5px')\n  //       .style('font-size', '0.8rem');\n\n  //     const pie = d3.pie().value(d => d.generation);\n  //     const arc = d3.arc().innerRadius(0).outerRadius(radius);\n  //     const outerArc = d3.arc().innerRadius(radius * 1.2).outerRadius(radius * 1.2);\n\n  //     // Create arcs\n  //     const arcs = svg.selectAll('.arc')\n  //       .data(pie(data))\n  //       .enter().append('g')\n  //       .attr('class', 'arc');\n\n  //     // Draw pie slices\n  //     arcs.append('path')\n  //       .attr('d', arc)\n  //       .attr('fill', d => color(d.data.state))\n  //       .on('mouseover', function (event, d) {\n  //         tooltip.transition().duration(200).style('opacity', 0.9);\n  //         tooltip.html(`${d.data.state}: ${d.data.generation} GWh`)\n  //           .style('left', (event.pageX + 10) + 'px')\n  //           .style('top', (event.pageY - 25) + 'px');\n  //       })\n  //       .on('mousemove', function (event) {\n  //         tooltip.style('left', (event.pageX + 10) + 'px')\n  //           .style('top', (event.pageY - 25) + 'px');\n  //       })\n  //       .on('mouseout', function () {\n  //         tooltip.transition().duration(500).style('opacity', 0);\n  //       });\n\n  //     // Draw labels with lines pointing to slices\n  //     arcs.append('polyline')\n  //       .attr('points', d => {\n  //         const posA = arc.centroid(d); // Slice center\n  //         const posB = outerArc.centroid(d); // Label position\n  //         const posC = [outerArc.centroid(d)[0] + (d.endAngle > Math.PI ? -10 : 10), outerArc.centroid(d)[1]]; // Extended line\n  //         return [posA, posB, posC];\n  //       })\n  //       .style('fill', 'none')\n  //       .style('stroke', 'black')\n  //       .style('stroke-width', '1px')\n  //       .style('opacity', 0.7);\n\n  //     arcs.append('text')\n  //       .attr('transform', d => `translate(${outerArc.centroid(d)})`)\n  //       .attr('dy', '.35em')\n  //       .style('text-anchor', d => d.endAngle > Math.PI ? 'end' : 'start')\n  //       .text(d => d.data.state)\n  //       .style('font-size', '0.8rem')\n  //       .style('font-weight', 'bold')\n  //       .style('fill', '#333');\n\n  //     // Draw legend\n  //     const legend = svg.append('g')\n  //       .attr('class', 'legend')\n  //       .attr('transform', `translate(${width / 2 - 100}, ${height / 2 + radius + 20})`);\n\n  //     data.forEach((d, i) => {\n  //       const legendRow = legend.append('g')\n  //         .attr('class', 'legend-row')\n  //         .attr('transform', `translate(0, ${i * 20})`);\n\n  //       legendRow.append('rect')\n  //         .attr('width', 15)\n  //         .attr('height', 15)\n  //         .attr('fill', color(d.state));\n\n  //       legendRow.append('text')\n  //         .attr('x', 20)\n  //         .attr('y', 12)\n  //         .text(d.state)\n  //         .style('font-size', '0.9rem')\n  //         .style('color', '#333');\n  //     });\n  //   };\n\n  // const drawChart = (data) => {\n  //   // Clear any previous chart\n  //   d3.select('#chart').selectAll('*').remove();\n\n  //   const width = 700;  // Chart width\n  //   const height = 500; // Chart height\n  //   const radius = Math.min(width, height) / 2;\n\n  //   const color = d3.scaleOrdinal(d3.schemeCategory10);\n\n  //   // Create SVG\n  //   const svg = d3.select('#chart')\n  //     .append('svg')\n  //     .attr('width', width)\n  //     .attr('height', height)\n  //     .append('g')\n  //     .attr('transform', `translate(${width / 2}, ${height / 2})`);\n\n  //   // Tooltip\n  //   const tooltip = d3.select('#chart')\n  //     .append('div')\n  //     .attr('class', 'tooltip')\n  //     .style('opacity', 0)\n  //     .style('position', 'absolute')\n  //     .style('background', '#333')\n  //     .style('color', '#fff')\n  //     .style('padding', '5px')\n  //     .style('border-radius', '5px')\n  //     .style('font-size', '0.8rem');\n\n  //   const pie = d3.pie().value(d => d.generation);\n  //   const arc = d3.arc().innerRadius(0).outerRadius(radius);\n\n  //   // Create arcs\n  //   const arcs = svg.selectAll('.arc')\n  //     .data(pie(data))\n  //     .enter().append('g')\n  //     .attr('class', 'arc');\n\n  //   // Draw pie slices\n  //   arcs.append('path')\n  //     .attr('d', arc)\n  //     .attr('fill', d => color(d.data.state))\n  //     .on('mouseover', function (event, d) {\n  //       tooltip.transition().duration(200).style('opacity', 0.9);\n  //       tooltip.html(`${d.data.state}: ${d.data.generation} GWh`)\n  //         .style('left', (event.pageX + 10) + 'px')\n  //         .style('top', (event.pageY - 25) + 'px');\n  //     })\n  //     .on('mousemove', function (event) {\n  //       tooltip.style('left', (event.pageX + 10) + 'px')\n  //         .style('top', (event.pageY - 25) + 'px');\n  //     })\n  //     .on('mouseout', function () {\n  //       tooltip.transition().duration(500).style('opacity', 0);\n  //     });\n\n  //   // Draw text labels inside the slices\n  //   arcs.append('text')\n  //     .attr('transform', d => {\n  //       // Position the label at the centroid of each slice\n  //       const centroid = arc.centroid(d);\n  //       return `translate(${centroid})`;\n  //     })\n  //     .attr('dy', '.35em') // Adjust vertical alignment to avoid cutting off the text\n  //     .style('text-anchor', 'middle') // Center the text horizontally\n  //     .text(d => d.data.state)\n  //     .style('font-size', '0.8rem')  // Adjust font size to fit within the slice\n  //     .style('font-weight', 'bold')\n  //     .style('fill', '#fff'); // White text for better contrast\n\n  //   // Draw legend\n  //   const legend = svg.append('g')\n  //     .attr('class', 'legend')\n  //     .attr('transform', `translate(${width / 2 - 100}, ${height / 2 + radius + 20})`);\n\n  //   data.forEach((d, i) => {\n  //     const legendRow = legend.append('g')\n  //       .attr('class', 'legend-row')\n  //       .attr('transform', `translate(0, ${i * 20})`);\n\n  //     legendRow.append('rect')\n  //       .attr('width', 15)\n  //       .attr('height', 15)\n  //       .attr('fill', color(d.state));\n\n  //     legendRow.append('text')\n  //       .attr('x', 20)\n  //       .attr('y', 12)\n  //       .text(d.state)\n  //       .style('font-size', '0.9rem')\n  //       .style('color', '#333');\n  //   });\n  // };\n\n  const drawChart = data => {\n    // Clear any previous chart\n    d3.select('#chart').selectAll('*').remove();\n    const width = 700; // Chart width\n    const height = 500; // Chart height\n    const radius = Math.min(width, height) / 2;\n    const color = d3.scaleOrdinal(d3.schemeCategory10);\n\n    // Create SVG\n    const svg = d3.select('#chart').append('svg').attr('width', width).attr('height', height).append('g').attr('transform', `translate(${width / 2}, ${height / 2})`);\n\n    // Tooltip\n    const tooltip = d3.select('#chart').append('div').attr('class', 'tooltip').style('opacity', 0).style('position', 'absolute').style('background', '#333').style('color', '#fff').style('padding', '5px').style('border-radius', '5px').style('font-size', '0.8rem');\n    const pie = d3.pie().value(d => d.generation);\n    const arc = d3.arc().innerRadius(0).outerRadius(radius);\n\n    // Create arcs\n    const arcs = svg.selectAll('.arc').data(pie(data)).enter().append('g').attr('class', 'arc');\n\n    // Draw pie slices\n    arcs.append('path').attr('d', arc).attr('fill', d => color(d.data.state)).on('mouseover', function (event, d) {\n      tooltip.transition().duration(200).style('opacity', 0.9);\n      tooltip.html(`${d.data.state}: ${d.data.generation} GWh`).style('left', event.pageX + 10 + 'px').style('top', event.pageY - 25 + 'px');\n    }).on('mousemove', function (event) {\n      tooltip.style('left', event.pageX + 10 + 'px').style('top', event.pageY - 25 + 'px');\n    }).on('mouseout', function () {\n      tooltip.transition().duration(500).style('opacity', 0);\n    });\n\n    // Draw text labels inside the slices (with rotation for small slices)\n    arcs.append('text').attr('transform', d => {\n      const centroid = arc.centroid(d);\n      const angle = (d.startAngle + d.endAngle) / 2;\n      const rotate = angle * 180 / Math.PI - 90;\n      return `translate(${centroid}) rotate(${rotate})`;\n    }).attr('dy', '.35em').style('text-anchor', 'middle').text(d => d.data.state).style('font-size', '0.8rem') // Adjust font size to fit within the slice\n    .style('font-weight', 'bold').style('fill', '#fff'); // White text for better contrast\n\n    // Draw legend with more space from the chart\n    const legend = svg.append('g').attr('class', 'legend').attr('transform', `translate(${width / 2 + radius + 40}, -${height / 4})`); // Increased space between chart and legend (40px)\n\n    data.forEach((d, i) => {\n      const legendRow = legend.append('g').attr('class', 'legend-row').attr('transform', `translate(0, ${i * 20})`);\n      legendRow.append('rect').attr('width', 15).attr('height', 15).attr('fill', color(d.state));\n      legendRow.append('text').attr('x', 20).attr('y', 12).text(d.state).style('font-size', '0.9rem').style('color', '#333');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Solar Energy Generation in 2023 by State (GWh)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"This chart displays the solar energy generation in gigawatt-hours (GWh) for various states in the USA during 2023. The data reflects the total solar energy generated in each state, providing insights into the distribution of solar energy resources across the country.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Source: \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://www.climatecentral.org/report/solar-and-wind-power-2024\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Climate Central\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 329,\n    columnNumber: 5\n  }, this);\n};\n_s(Reports, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = Reports;\nexport default Reports;\nvar _c;\n$RefreshReg$(_c, \"Reports\");","map":{"version":3,"names":["React","useEffect","useState","axios","d3","jsxDEV","_jsxDEV","Reports","_s","data","setData","fetchData","token","localStorage","getItem","response","get","headers","Authorization","drawChart","error","console","select","selectAll","remove","width","height","radius","Math","min","color","scaleOrdinal","schemeCategory10","svg","append","attr","tooltip","style","pie","value","d","generation","arc","innerRadius","outerRadius","arcs","enter","state","on","event","transition","duration","html","pageX","pageY","centroid","angle","startAngle","endAngle","rotate","PI","text","legend","forEach","i","legendRow","children","fileName","_jsxFileName","lineNumber","columnNumber","id","href","target","rel","_c","$RefreshReg$"],"sources":["C:/Users/kolli sushma/Downloads/S62/frontend/src/components/Reports.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport * as d3 from 'd3';\r\nimport '../styles/Reports.css';\r\n\r\nconst Reports = () => {\r\n\r\n  // eslint-disable-next-line no-unused-vars\r\nconst [data, setData] = useState([]);\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const token = localStorage.getItem('token'); // Retrieve the token\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/solar-generation', {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`, // Include the token in headers\r\n          },\r\n        });\r\n        setData(response.data);\r\n        drawChart(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching the data:\", error);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n\r\n// const drawChart = (data) => {\r\n//     // Clear any previous chart\r\n//     d3.select('#chart').selectAll('*').remove();\r\n  \r\n//     const width = 600;\r\n//     const height = 400;\r\n//     const radius = Math.min(width, height) / 2;\r\n  \r\n//     const color = d3.scaleOrdinal(d3.schemeCategory10);\r\n  \r\n//     // Create SVG\r\n//     const svg = d3.select('#chart')\r\n//       .append('svg')\r\n//       .attr('width', width)\r\n//       .attr('height', height)\r\n//       .append('g')\r\n//       .attr('transform', `translate(${width / 2}, ${height / 2})`);\r\n  \r\n//     // Tooltip\r\n//     const tooltip = d3.select('#chart')\r\n//       .append('div')\r\n//       .attr('class', 'tooltip')\r\n//       .style('opacity', 0)\r\n//       .style('position', 'absolute')\r\n//       .style('background', '#333')\r\n//       .style('color', '#fff')\r\n//       .style('padding', '5px')\r\n//       .style('border-radius', '5px')\r\n//       .style('font-size', '0.8rem');\r\n  \r\n//     const pie = d3.pie().value(d => d.generation);\r\n//     const arc = d3.arc().innerRadius(0).outerRadius(radius);\r\n//     const outerArc = d3.arc().innerRadius(radius * 1.2).outerRadius(radius * 1.2);\r\n  \r\n//     // Create arcs\r\n//     const arcs = svg.selectAll('.arc')\r\n//       .data(pie(data))\r\n//       .enter().append('g')\r\n//       .attr('class', 'arc');\r\n  \r\n//     // Draw pie slices\r\n//     arcs.append('path')\r\n//       .attr('d', arc)\r\n//       .attr('fill', d => color(d.data.state))\r\n//       .on('mouseover', function (event, d) {\r\n//         tooltip.transition().duration(200).style('opacity', 0.9);\r\n//         tooltip.html(`${d.data.state}: ${d.data.generation} GWh`)\r\n//           .style('left', (event.pageX + 10) + 'px')\r\n//           .style('top', (event.pageY - 25) + 'px');\r\n//       })\r\n//       .on('mousemove', function (event) {\r\n//         tooltip.style('left', (event.pageX + 10) + 'px')\r\n//           .style('top', (event.pageY - 25) + 'px');\r\n//       })\r\n//       .on('mouseout', function () {\r\n//         tooltip.transition().duration(500).style('opacity', 0);\r\n//       });\r\n  \r\n//     // Draw labels with lines pointing to slices\r\n//     arcs.append('polyline')\r\n//       .attr('points', d => {\r\n//         const posA = arc.centroid(d); // Slice center\r\n//         const posB = outerArc.centroid(d); // Label position\r\n//         const posC = [outerArc.centroid(d)[0] + (d.endAngle > Math.PI ? -10 : 10), outerArc.centroid(d)[1]]; // Extended line\r\n//         return [posA, posB, posC];\r\n//       })\r\n//       .style('fill', 'none')\r\n//       .style('stroke', 'black')\r\n//       .style('stroke-width', '1px')\r\n//       .style('opacity', 0.7);\r\n  \r\n//     arcs.append('text')\r\n//       .attr('transform', d => `translate(${outerArc.centroid(d)})`)\r\n//       .attr('dy', '.35em')\r\n//       .style('text-anchor', d => d.endAngle > Math.PI ? 'end' : 'start')\r\n//       .text(d => d.data.state)\r\n//       .style('font-size', '0.8rem')\r\n//       .style('font-weight', 'bold')\r\n//       .style('fill', '#333');\r\n  \r\n//     // Draw legend\r\n//     const legend = svg.append('g')\r\n//       .attr('class', 'legend')\r\n//       .attr('transform', `translate(${width / 2 - 100}, ${height / 2 + radius + 20})`);\r\n  \r\n//     data.forEach((d, i) => {\r\n//       const legendRow = legend.append('g')\r\n//         .attr('class', 'legend-row')\r\n//         .attr('transform', `translate(0, ${i * 20})`);\r\n  \r\n//       legendRow.append('rect')\r\n//         .attr('width', 15)\r\n//         .attr('height', 15)\r\n//         .attr('fill', color(d.state));\r\n  \r\n//       legendRow.append('text')\r\n//         .attr('x', 20)\r\n//         .attr('y', 12)\r\n//         .text(d.state)\r\n//         .style('font-size', '0.9rem')\r\n//         .style('color', '#333');\r\n//     });\r\n//   };\r\n\r\n// const drawChart = (data) => {\r\n//   // Clear any previous chart\r\n//   d3.select('#chart').selectAll('*').remove();\r\n\r\n//   const width = 700;  // Chart width\r\n//   const height = 500; // Chart height\r\n//   const radius = Math.min(width, height) / 2;\r\n\r\n//   const color = d3.scaleOrdinal(d3.schemeCategory10);\r\n\r\n//   // Create SVG\r\n//   const svg = d3.select('#chart')\r\n//     .append('svg')\r\n//     .attr('width', width)\r\n//     .attr('height', height)\r\n//     .append('g')\r\n//     .attr('transform', `translate(${width / 2}, ${height / 2})`);\r\n\r\n//   // Tooltip\r\n//   const tooltip = d3.select('#chart')\r\n//     .append('div')\r\n//     .attr('class', 'tooltip')\r\n//     .style('opacity', 0)\r\n//     .style('position', 'absolute')\r\n//     .style('background', '#333')\r\n//     .style('color', '#fff')\r\n//     .style('padding', '5px')\r\n//     .style('border-radius', '5px')\r\n//     .style('font-size', '0.8rem');\r\n\r\n//   const pie = d3.pie().value(d => d.generation);\r\n//   const arc = d3.arc().innerRadius(0).outerRadius(radius);\r\n\r\n//   // Create arcs\r\n//   const arcs = svg.selectAll('.arc')\r\n//     .data(pie(data))\r\n//     .enter().append('g')\r\n//     .attr('class', 'arc');\r\n\r\n//   // Draw pie slices\r\n//   arcs.append('path')\r\n//     .attr('d', arc)\r\n//     .attr('fill', d => color(d.data.state))\r\n//     .on('mouseover', function (event, d) {\r\n//       tooltip.transition().duration(200).style('opacity', 0.9);\r\n//       tooltip.html(`${d.data.state}: ${d.data.generation} GWh`)\r\n//         .style('left', (event.pageX + 10) + 'px')\r\n//         .style('top', (event.pageY - 25) + 'px');\r\n//     })\r\n//     .on('mousemove', function (event) {\r\n//       tooltip.style('left', (event.pageX + 10) + 'px')\r\n//         .style('top', (event.pageY - 25) + 'px');\r\n//     })\r\n//     .on('mouseout', function () {\r\n//       tooltip.transition().duration(500).style('opacity', 0);\r\n//     });\r\n\r\n//   // Draw text labels inside the slices\r\n//   arcs.append('text')\r\n//     .attr('transform', d => {\r\n//       // Position the label at the centroid of each slice\r\n//       const centroid = arc.centroid(d);\r\n//       return `translate(${centroid})`;\r\n//     })\r\n//     .attr('dy', '.35em') // Adjust vertical alignment to avoid cutting off the text\r\n//     .style('text-anchor', 'middle') // Center the text horizontally\r\n//     .text(d => d.data.state)\r\n//     .style('font-size', '0.8rem')  // Adjust font size to fit within the slice\r\n//     .style('font-weight', 'bold')\r\n//     .style('fill', '#fff'); // White text for better contrast\r\n\r\n//   // Draw legend\r\n//   const legend = svg.append('g')\r\n//     .attr('class', 'legend')\r\n//     .attr('transform', `translate(${width / 2 - 100}, ${height / 2 + radius + 20})`);\r\n\r\n//   data.forEach((d, i) => {\r\n//     const legendRow = legend.append('g')\r\n//       .attr('class', 'legend-row')\r\n//       .attr('transform', `translate(0, ${i * 20})`);\r\n\r\n//     legendRow.append('rect')\r\n//       .attr('width', 15)\r\n//       .attr('height', 15)\r\n//       .attr('fill', color(d.state));\r\n\r\n//     legendRow.append('text')\r\n//       .attr('x', 20)\r\n//       .attr('y', 12)\r\n//       .text(d.state)\r\n//       .style('font-size', '0.9rem')\r\n//       .style('color', '#333');\r\n//   });\r\n// };\r\n\r\nconst drawChart = (data) => {\r\n  // Clear any previous chart\r\n  d3.select('#chart').selectAll('*').remove();\r\n\r\n  const width = 700;  // Chart width\r\n  const height = 500; // Chart height\r\n  const radius = Math.min(width, height) / 2;\r\n\r\n  const color = d3.scaleOrdinal(d3.schemeCategory10);\r\n\r\n  // Create SVG\r\n  const svg = d3.select('#chart')\r\n      .append('svg')\r\n      .attr('width', width)\r\n      .attr('height', height)\r\n      .append('g')\r\n      .attr('transform', `translate(${width / 2}, ${height / 2})`);\r\n\r\n  // Tooltip\r\n  const tooltip = d3.select('#chart')\r\n      .append('div')\r\n      .attr('class', 'tooltip')\r\n      .style('opacity', 0)\r\n      .style('position', 'absolute')\r\n      .style('background', '#333')\r\n      .style('color', '#fff')\r\n      .style('padding', '5px')\r\n      .style('border-radius', '5px')\r\n      .style('font-size', '0.8rem');\r\n\r\n  const pie = d3.pie().value(d => d.generation);\r\n  const arc = d3.arc().innerRadius(0).outerRadius(radius);\r\n\r\n  // Create arcs\r\n  const arcs = svg.selectAll('.arc')\r\n      .data(pie(data))\r\n      .enter().append('g')\r\n      .attr('class', 'arc');\r\n\r\n  // Draw pie slices\r\n  arcs.append('path')\r\n      .attr('d', arc)\r\n      .attr('fill', d => color(d.data.state))\r\n      .on('mouseover', function (event, d) {\r\n          tooltip.transition().duration(200).style('opacity', 0.9);\r\n          tooltip.html(`${d.data.state}: ${d.data.generation} GWh`)\r\n              .style('left', (event.pageX + 10) + 'px')\r\n              .style('top', (event.pageY - 25) + 'px');\r\n      })\r\n      .on('mousemove', function (event) {\r\n          tooltip.style('left', (event.pageX + 10) + 'px')\r\n              .style('top', (event.pageY - 25) + 'px');\r\n      })\r\n      .on('mouseout', function () {\r\n          tooltip.transition().duration(500).style('opacity', 0);\r\n      });\r\n\r\n  // Draw text labels inside the slices (with rotation for small slices)\r\n  arcs.append('text')\r\n      .attr('transform', d => {\r\n          const centroid = arc.centroid(d);\r\n          const angle = (d.startAngle + d.endAngle) / 2;\r\n          const rotate = angle * 180 / Math.PI - 90;\r\n          return `translate(${centroid}) rotate(${rotate})`;\r\n      })\r\n      .attr('dy', '.35em')\r\n      .style('text-anchor', 'middle')\r\n      .text(d => d.data.state)\r\n      .style('font-size', '0.8rem')  // Adjust font size to fit within the slice\r\n      .style('font-weight', 'bold')\r\n      .style('fill', '#fff');  // White text for better contrast\r\n\r\n  // Draw legend with more space from the chart\r\n  const legend = svg.append('g')\r\n      .attr('class', 'legend')\r\n      .attr('transform', `translate(${width / 2 + radius + 40}, -${height / 4})`);  // Increased space between chart and legend (40px)\r\n\r\n  data.forEach((d, i) => {\r\n      const legendRow = legend.append('g')\r\n          .attr('class', 'legend-row')\r\n          .attr('transform', `translate(0, ${i * 20})`);\r\n\r\n      legendRow.append('rect')\r\n          .attr('width', 15)\r\n          .attr('height', 15)\r\n          .attr('fill', color(d.state));\r\n\r\n      legendRow.append('text')\r\n          .attr('x', 20)\r\n          .attr('y', 12)\r\n          .text(d.state)\r\n          .style('font-size', '0.9rem')\r\n          .style('color', '#333');\r\n  });\r\n};\r\n\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <h1>Solar Energy Generation in 2023 by State (GWh)</h1>\r\n      <div id=\"chart\"></div>\r\n      <p>This chart displays the solar energy generation in gigawatt-hours (GWh) for various states in the USA during 2023. The data reflects the total solar energy generated in each state, providing insights into the distribution of solar energy resources across the country.</p>\r\n      <p>Source: <a href=\"https://www.climatecentral.org/report/solar-and-wind-power-2024\" target=\"_blank\" rel=\"noopener noreferrer\">Climate Central</a></p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Reports;\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,KAAKC,EAAE,MAAM,IAAI;AACxB,OAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEpB;EACF,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAGlCD,SAAS,CAAC,MAAM;IACd,MAAMU,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;MAC7C,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,4CAA4C,EAAE;UAC7EC,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUN,KAAK,EAAE,CAAE;UACpC;QACF,CAAC,CAAC;QACFF,OAAO,CAACK,QAAQ,CAACN,IAAI,CAAC;QACtBU,SAAS,CAACJ,QAAQ,CAACN,IAAI,CAAC;MAC1B,CAAC,CAAC,OAAOW,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IACDT,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;;EAGR;EACA;EACA;;EAEA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMQ,SAAS,GAAIV,IAAI,IAAK;IAC1B;IACAL,EAAE,CAACkB,MAAM,CAAC,QAAQ,CAAC,CAACC,SAAS,CAAC,GAAG,CAAC,CAACC,MAAM,CAAC,CAAC;IAE3C,MAAMC,KAAK,GAAG,GAAG,CAAC,CAAE;IACpB,MAAMC,MAAM,GAAG,GAAG,CAAC,CAAC;IACpB,MAAMC,MAAM,GAAGC,IAAI,CAACC,GAAG,CAACJ,KAAK,EAAEC,MAAM,CAAC,GAAG,CAAC;IAE1C,MAAMI,KAAK,GAAG1B,EAAE,CAAC2B,YAAY,CAAC3B,EAAE,CAAC4B,gBAAgB,CAAC;;IAElD;IACA,MAAMC,GAAG,GAAG7B,EAAE,CAACkB,MAAM,CAAC,QAAQ,CAAC,CAC1BY,MAAM,CAAC,KAAK,CAAC,CACbC,IAAI,CAAC,OAAO,EAAEV,KAAK,CAAC,CACpBU,IAAI,CAAC,QAAQ,EAAET,MAAM,CAAC,CACtBQ,MAAM,CAAC,GAAG,CAAC,CACXC,IAAI,CAAC,WAAW,EAAE,aAAaV,KAAK,GAAG,CAAC,KAAKC,MAAM,GAAG,CAAC,GAAG,CAAC;;IAEhE;IACA,MAAMU,OAAO,GAAGhC,EAAE,CAACkB,MAAM,CAAC,QAAQ,CAAC,CAC9BY,MAAM,CAAC,KAAK,CAAC,CACbC,IAAI,CAAC,OAAO,EAAE,SAAS,CAAC,CACxBE,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC,CACnBA,KAAK,CAAC,UAAU,EAAE,UAAU,CAAC,CAC7BA,KAAK,CAAC,YAAY,EAAE,MAAM,CAAC,CAC3BA,KAAK,CAAC,OAAO,EAAE,MAAM,CAAC,CACtBA,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,CACvBA,KAAK,CAAC,eAAe,EAAE,KAAK,CAAC,CAC7BA,KAAK,CAAC,WAAW,EAAE,QAAQ,CAAC;IAEjC,MAAMC,GAAG,GAAGlC,EAAE,CAACkC,GAAG,CAAC,CAAC,CAACC,KAAK,CAACC,CAAC,IAAIA,CAAC,CAACC,UAAU,CAAC;IAC7C,MAAMC,GAAG,GAAGtC,EAAE,CAACsC,GAAG,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAAC,CAACC,WAAW,CAACjB,MAAM,CAAC;;IAEvD;IACA,MAAMkB,IAAI,GAAGZ,GAAG,CAACV,SAAS,CAAC,MAAM,CAAC,CAC7Bd,IAAI,CAAC6B,GAAG,CAAC7B,IAAI,CAAC,CAAC,CACfqC,KAAK,CAAC,CAAC,CAACZ,MAAM,CAAC,GAAG,CAAC,CACnBC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC;;IAEzB;IACAU,IAAI,CAACX,MAAM,CAAC,MAAM,CAAC,CACdC,IAAI,CAAC,GAAG,EAAEO,GAAG,CAAC,CACdP,IAAI,CAAC,MAAM,EAAEK,CAAC,IAAIV,KAAK,CAACU,CAAC,CAAC/B,IAAI,CAACsC,KAAK,CAAC,CAAC,CACtCC,EAAE,CAAC,WAAW,EAAE,UAAUC,KAAK,EAAET,CAAC,EAAE;MACjCJ,OAAO,CAACc,UAAU,CAAC,CAAC,CAACC,QAAQ,CAAC,GAAG,CAAC,CAACd,KAAK,CAAC,SAAS,EAAE,GAAG,CAAC;MACxDD,OAAO,CAACgB,IAAI,CAAC,GAAGZ,CAAC,CAAC/B,IAAI,CAACsC,KAAK,KAAKP,CAAC,CAAC/B,IAAI,CAACgC,UAAU,MAAM,CAAC,CACpDJ,KAAK,CAAC,MAAM,EAAGY,KAAK,CAACI,KAAK,GAAG,EAAE,GAAI,IAAI,CAAC,CACxChB,KAAK,CAAC,KAAK,EAAGY,KAAK,CAACK,KAAK,GAAG,EAAE,GAAI,IAAI,CAAC;IAChD,CAAC,CAAC,CACDN,EAAE,CAAC,WAAW,EAAE,UAAUC,KAAK,EAAE;MAC9Bb,OAAO,CAACC,KAAK,CAAC,MAAM,EAAGY,KAAK,CAACI,KAAK,GAAG,EAAE,GAAI,IAAI,CAAC,CAC3ChB,KAAK,CAAC,KAAK,EAAGY,KAAK,CAACK,KAAK,GAAG,EAAE,GAAI,IAAI,CAAC;IAChD,CAAC,CAAC,CACDN,EAAE,CAAC,UAAU,EAAE,YAAY;MACxBZ,OAAO,CAACc,UAAU,CAAC,CAAC,CAACC,QAAQ,CAAC,GAAG,CAAC,CAACd,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC;IAC1D,CAAC,CAAC;;IAEN;IACAQ,IAAI,CAACX,MAAM,CAAC,MAAM,CAAC,CACdC,IAAI,CAAC,WAAW,EAAEK,CAAC,IAAI;MACpB,MAAMe,QAAQ,GAAGb,GAAG,CAACa,QAAQ,CAACf,CAAC,CAAC;MAChC,MAAMgB,KAAK,GAAG,CAAChB,CAAC,CAACiB,UAAU,GAAGjB,CAAC,CAACkB,QAAQ,IAAI,CAAC;MAC7C,MAAMC,MAAM,GAAGH,KAAK,GAAG,GAAG,GAAG5B,IAAI,CAACgC,EAAE,GAAG,EAAE;MACzC,OAAO,aAAaL,QAAQ,YAAYI,MAAM,GAAG;IACrD,CAAC,CAAC,CACDxB,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,CACnBE,KAAK,CAAC,aAAa,EAAE,QAAQ,CAAC,CAC9BwB,IAAI,CAACrB,CAAC,IAAIA,CAAC,CAAC/B,IAAI,CAACsC,KAAK,CAAC,CACvBV,KAAK,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAE;IAAA,CAC9BA,KAAK,CAAC,aAAa,EAAE,MAAM,CAAC,CAC5BA,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,CAAE;;IAE7B;IACA,MAAMyB,MAAM,GAAG7B,GAAG,CAACC,MAAM,CAAC,GAAG,CAAC,CACzBC,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,CACvBA,IAAI,CAAC,WAAW,EAAE,aAAaV,KAAK,GAAG,CAAC,GAAGE,MAAM,GAAG,EAAE,MAAMD,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,CAAE;;IAElFjB,IAAI,CAACsD,OAAO,CAAC,CAACvB,CAAC,EAAEwB,CAAC,KAAK;MACnB,MAAMC,SAAS,GAAGH,MAAM,CAAC5B,MAAM,CAAC,GAAG,CAAC,CAC/BC,IAAI,CAAC,OAAO,EAAE,YAAY,CAAC,CAC3BA,IAAI,CAAC,WAAW,EAAE,gBAAgB6B,CAAC,GAAG,EAAE,GAAG,CAAC;MAEjDC,SAAS,CAAC/B,MAAM,CAAC,MAAM,CAAC,CACnBC,IAAI,CAAC,OAAO,EAAE,EAAE,CAAC,CACjBA,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC,CAClBA,IAAI,CAAC,MAAM,EAAEL,KAAK,CAACU,CAAC,CAACO,KAAK,CAAC,CAAC;MAEjCkB,SAAS,CAAC/B,MAAM,CAAC,MAAM,CAAC,CACnBC,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,CACbA,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,CACb0B,IAAI,CAACrB,CAAC,CAACO,KAAK,CAAC,CACbV,KAAK,CAAC,WAAW,EAAE,QAAQ,CAAC,CAC5BA,KAAK,CAAC,OAAO,EAAE,MAAM,CAAC;IAC/B,CAAC,CAAC;EACJ,CAAC;EAIC,oBACE/B,OAAA;IAAA4D,QAAA,gBACE5D,OAAA;MAAA4D,QAAA,EAAI;IAA8C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvDhE,OAAA;MAAKiE,EAAE,EAAC;IAAO;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACtBhE,OAAA;MAAA4D,QAAA,EAAG;IAA2Q;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAClRhE,OAAA;MAAA4D,QAAA,GAAG,UAAQ,eAAA5D,OAAA;QAAGkE,IAAI,EAAC,iEAAiE;QAACC,MAAM,EAAC,QAAQ;QAACC,GAAG,EAAC,qBAAqB;QAAAR,QAAA,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnJ,CAAC;AAEV,CAAC;AAAC9D,EAAA,CA1UID,OAAO;AAAAoE,EAAA,GAAPpE,OAAO;AA4Ub,eAAeA,OAAO;AAAC,IAAAoE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}